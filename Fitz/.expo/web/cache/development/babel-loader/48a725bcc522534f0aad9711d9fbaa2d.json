{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Hackathon\\\\Fitz\\\\src\\\\screens\\\\Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { Rating } from \"react-native-ratings\";\n\nvar Trainer = function Trainer(_ref) {\n  var trainer = _ref.trainer;\n  return React.createElement(View, {\n    style: s.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: s.cardProfileImage,\n    source: trainer.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: {\n      alignSelf: \"center\",\n      fontFamily: \"Roboto\",\n      fontWeight: \"bold\",\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, trainer.name), React.createElement(Rating, {\n    ratingCount: 5,\n    startingValue: trainer.rating,\n    readonly: true,\n    imageSize: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      padding: 20\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    data: trainer.categories,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        style: {\n          fontSize: 15\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }\n      }, item);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n};\n\nvar HomeScreen = function HomeScreen(_ref3) {\n  var route = _ref3.route,\n      navigation = _ref3.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      modalVisible = _React$useState4[0],\n      setModalVisible = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      currentTrainer = _React$useState6[0],\n      setCurrentTrainer = _React$useState6[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  console.log(nav);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingTop: 5,\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: s.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: s.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: s.modalText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, currentTrainer.name), React.createElement(Image, {\n    style: (s.cardProfileImage, {\n      width: 150,\n      height: 150,\n      borderRadius: 20\n    }),\n    source: currentTrainer.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), React.createElement(Rating, {\n    ratingCount: 5,\n    startingValue: currentTrainer.rating,\n    readonly: true,\n    imageSize: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: (s.modalText, {\n      fontSize: 20,\n      top: 40,\n      padding: 20\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, '\"' + currentTrainer.description + '\"'), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    style: {\n      padding: 20,\n      top: 20\n    },\n    data: currentTrainer.categories,\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 28\n        }\n      }, item);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }))), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, s.openButton), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: s.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Close\"))))), React.createElement(FlatList, {\n    data: require(\"../dummy/cards.js\"),\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setCurrentTrainer(item);\n          console.log(currentTrainer);\n          setModalVisible(true);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, React.createElement(Trainer, {\n        trainer: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    numColumns: 1,\n    contentContainerStyle: {\n      backgroundColor: \"white\"\n    },\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar s = require(\"../style/global-style.js\");\n\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/gabri/Hackathon/Fitz/src/screens/Home.js"],"names":["React","Rating","Trainer","trainer","s","card","flex","flexDirection","justifyContent","cardProfileImage","image","alignSelf","fontFamily","fontWeight","fontSize","name","rating","padding","item","id","categories","wait","timeout","Promise","resolve","setTimeout","HomeScreen","route","navigation","useState","refreshing","setRefreshing","modalVisible","setModalVisible","currentTrainer","setCurrentTrainer","onRefresh","useCallback","then","console","log","nav","paddingTop","backgroundColor","centeredView","modalView","modalText","width","height","borderRadius","top","description","openButton","textStyle","require"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  View,\r\n  Text,\r\n  Image,\r\n  Modal,\r\n  RefreshControl,\r\n  FlatList,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport { Rating } from \"react-native-ratings\";\r\n\r\nconst Trainer = ({ trainer }) => {\r\n  return (\r\n    <View style={s.card}>\r\n      <View\r\n        style={{ flex: 1, flexDirection: \"column\", justifyContent: \"center\" }}\r\n      >\r\n        <Image style={s.cardProfileImage} source={trainer.image}></Image>\r\n        <Text\r\n          style={{\r\n            alignSelf: \"center\",\r\n            fontFamily: \"Roboto\",\r\n            fontWeight: \"bold\",\r\n            fontSize: 15,\r\n          }}\r\n        >\r\n          {trainer.name}\r\n        </Text>\r\n        <Rating\r\n          ratingCount={5}\r\n          startingValue={trainer.rating}\r\n          readonly\r\n          imageSize={20}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <FlatList\r\n          style={{ padding: 20 }}\r\n          keyExtractor={(item) => item.id}\r\n          data={trainer.categories}\r\n          renderItem={({ item }) => {\r\n            return <Text style={{ fontSize: 15 }}>{item}</Text>;\r\n          }}\r\n        ></FlatList>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst wait = (timeout) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, timeout);\r\n  });\r\n};\r\n\r\nconst HomeScreen = ({ route, navigation }) => {\r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n  const [modalVisible, setModalVisible] = React.useState(false);\r\n  const [currentTrainer, setCurrentTrainer] = React.useState(false);\r\n\r\n  const onRefresh = React.useCallback(() => {\r\n    setRefreshing(true);\r\n    wait(2000).then(() => setRefreshing(false));\r\n  }, []);\r\n\r\n  console.log(nav);\r\n\r\n  /*  <View>\r\n        <Text>Selected list of interest: </Text>\r\n        <FlatList\r\n          style={{ padding: 20 }}\r\n          data={interests}\r\n          renderItem={({ item }) => {\r\n            return <Text style={{ fontSize: 15 }}>{item}</Text>;\r\n          }}\r\n        ></FlatList>\r\n      </View> */\r\n\r\n  return (\r\n    <View style={{ flex: 1, paddingTop: 5, backgroundColor: \"white\" }}>\r\n      {/*Modal*/}\r\n\r\n      <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\r\n        <View style={s.centeredView}>\r\n          <View style={s.modalView}>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <View>\r\n                <Text style={s.modalText}>{currentTrainer.name}</Text>\r\n                <Image\r\n                  style={\r\n                    (s.cardProfileImage,\r\n                    { width: 150, height: 150, borderRadius: 20 })\r\n                  }\r\n                  source={currentTrainer.image}\r\n                ></Image>\r\n                <Rating\r\n                  ratingCount={5}\r\n                  startingValue={currentTrainer.rating}\r\n                  readonly\r\n                  imageSize={20}\r\n                />\r\n              </View>\r\n              <View>\r\n                <Text\r\n                  style={(s.modalText, { fontSize: 20, top: 40, padding: 20 })}\r\n                >\r\n                  {'\"' + currentTrainer.description + '\"'}\r\n                </Text>\r\n                <FlatList\r\n                  keyExtractor={(item) => item.id}\r\n                  style={{ padding: 20, top: 20 }}\r\n                  data={currentTrainer.categories}\r\n                  renderItem={({ item }) => {\r\n                    return <Text style={{ fontSize: 20 }}>{item}</Text>;\r\n                  }}\r\n                ></FlatList>\r\n              </View>\r\n            </View>\r\n            <TouchableHighlight\r\n              style={{ ...s.openButton, backgroundColor: \"#2196F3\" }}\r\n              onPress={() => {\r\n                setModalVisible(false);\r\n              }}\r\n            >\r\n              <Text style={s.textStyle}>Close</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      {/*Modal*/}\r\n      <FlatList\r\n        data={require(\"../dummy/cards.js\")}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setCurrentTrainer(item);\r\n                console.log(currentTrainer);\r\n                setModalVisible(true);\r\n              }}\r\n            >\r\n              <Trainer trainer={item} />\r\n            </TouchableOpacity>\r\n          );\r\n        }}\r\n        keyExtractor={(item) => item.id}\r\n        numColumns={1}\r\n        contentContainerStyle={{\r\n          backgroundColor: \"white\",\r\n        }}\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n      ></FlatList>\r\n    </View>\r\n  );\r\n};\r\nconst s = require(\"../style/global-style.js\");\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}