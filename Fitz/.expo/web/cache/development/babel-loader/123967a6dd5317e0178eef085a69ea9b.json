{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/aryaj/Desktop/CS_Projects/VandyhacksSubmission/Fitz/src/screens/InterestPromptScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar Card = function Card(_ref) {\n  var item = _ref.item,\n      color = _ref.color;\n  console.log(color);\n  return React.createElement(View, {\n    style: [s.card, {\n      width: \"90%\",\n      alignSelf: \"center\",\n      justifyContent: \"center\",\n      padding: 20,\n      margin: 10\n    }, {\n      backgroundColor: color\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"black\",\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, item.name));\n};\n\nvar InterestPromptScreen = function InterestPromptScreen(_ref2) {\n  var nav = _ref2.nav;\n  var selected = \"#f2f2f2\";\n  var unselected = \"white\";\n\n  var interests = require(\"../dummy/interests.js\");\n\n  var _React$useState = React.useState(new Array(interests.length).fill(0)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      array = _React$useState2[0],\n      setArray = _React$useState2[1];\n\n  var _React$useState3 = React.useState(new Array(interests.length).fill(unselected)),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorArray = _React$useState4[0],\n      setColorArray = _React$useState4[1];\n\n  React.useEffect(function () {\n    return nav.addListener(\"beforeRemove\", function (e) {\n      e.preventDefault();\n    });\n  }, [nav]);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingTop: 5,\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      elevation: 10,\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Choose the categories you are interested in\")), React.createElement(FlatList, {\n    style: {\n      padding: 20\n    },\n    data: interests,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(TouchableOpacity, {\n        style: {\n          width: \"100%\",\n          flex: 1\n        },\n        onPress: function onPress() {\n          var temp = JSON.parse(JSON.stringify(array));\n          temp[interests.indexOf(item)] = temp[interests.indexOf(item)] === 1 ? 0 : 1;\n          setArray(temp);\n          var temp1 = JSON.parse(JSON.stringify(colorArray));\n          temp1[interests.indexOf(item)] = temp1[interests.indexOf(item)] === selected ? unselected : selected;\n          setColorArray(temp1);\n          console.log(temp1);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        item: item,\n        color: colorArray[interests.indexOf(item)],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return interests.indexOf(item);\n    },\n    numColumns: 3,\n    contentContainerStyle: {\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, s.openButton), {}, {\n      backgroundColor: \"#2196F3\",\n      padding: 20,\n      margin: 5\n    }),\n    onPress: function onPress() {\n      nav.navigate(\"Home\", {\n        array: array\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: s.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Finish\")));\n};\n\nvar s = require(\"../style/global-style.js\");\n\nexport default InterestPromptScreen;","map":{"version":3,"sources":["/home/aryaj/Desktop/CS_Projects/VandyhacksSubmission/Fitz/src/screens/InterestPromptScreen.js"],"names":["React","Card","item","color","console","log","s","card","width","alignSelf","justifyContent","padding","margin","backgroundColor","name","InterestPromptScreen","nav","selected","unselected","interests","require","useState","Array","length","fill","array","setArray","colorArray","setColorArray","useEffect","addListener","e","preventDefault","flex","paddingTop","elevation","fontSize","temp","JSON","parse","stringify","indexOf","temp1","openButton","navigate","textStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  TouchableOpacity,\n  View,\n  Text,\n  FlatList,\n  TouchableHighlight,\n} from \"react-native\";\n\nconst Card = ({ item, color }) => {\n  console.log(color);\n  return (\n    <View\n      style={[\n        s.card,\n        {\n          width: \"90%\",\n          alignSelf: \"center\",\n          justifyContent: \"center\",\n          padding: 20,\n          margin: 10,\n        },\n        {\n          backgroundColor: color,\n        },\n      ]}\n    >\n      <Text\n        style={{\n          color: \"black\",\n          alignSelf: \"center\",\n        }}\n      >\n        {item.name}\n      </Text>\n    </View>\n  );\n};\n\nconst InterestPromptScreen = ({ nav }) => {\n  const selected = \"#f2f2f2\";\n  const unselected = \"white\";\n\n  const interests = require(\"../dummy/interests.js\");\n  const [array, setArray] = React.useState(new Array(interests.length).fill(0));\n  const [colorArray, setColorArray] = React.useState(\n    new Array(interests.length).fill(unselected)\n  );\n  React.useEffect(\n    () =>\n      nav.addListener(\"beforeRemove\", (e) => {\n        e.preventDefault();\n      }),\n    [nav]\n  );\n\n  return (\n    <View style={{ flex: 1, paddingTop: 5, backgroundColor: \"white\" }}>\n      <View style={{ elevation: 10, padding: 10 }}>\n        <Text style={{ fontSize: 20, padding: 10 }}>\n          Choose the categories you are interested in\n        </Text>\n      </View>\n      <FlatList\n        style={{ padding: 20 }}\n        data={interests}\n        renderItem={({ item }) => {\n          return (\n            <TouchableOpacity\n              style={{ width: \"100%\", flex: 1 }}\n              onPress={() => {\n                let temp = JSON.parse(JSON.stringify(array));\n                temp[interests.indexOf(item)] =\n                  temp[interests.indexOf(item)] === 1 ? 0 : 1;\n                setArray(temp);\n                let temp1 = JSON.parse(JSON.stringify(colorArray));\n                temp1[interests.indexOf(item)] =\n                  temp1[interests.indexOf(item)] === selected\n                    ? unselected\n                    : selected;\n                setColorArray(temp1);\n                console.log(temp1);\n              }}\n            >\n              <Card\n                item={item}\n                color={colorArray[interests.indexOf(item)]}\n              ></Card>\n            </TouchableOpacity>\n          );\n        }}\n        keyExtractor={(item) => interests.indexOf(item)}\n        numColumns={3}\n        contentContainerStyle={{\n          backgroundColor: \"white\",\n        }}\n      ></FlatList>\n      <TouchableHighlight\n        style={{\n          ...s.openButton,\n          backgroundColor: \"#2196F3\",\n          padding: 20,\n          margin: 5,\n        }}\n        onPress={() => {\n          nav.navigate(\"Home\", { array });\n        }}\n      >\n        <Text style={s.textStyle}>Finish</Text>\n      </TouchableHighlight>\n    </View>\n  );\n};\nconst s = require(\"../style/global-style.js\");\n\nexport default InterestPromptScreen;\n"]},"metadata":{},"sourceType":"module"}